#!/bin/bash

#/
#--------------------------------------------------------------------------
# Larasail Initial Setup
#--------------------------------------------------------------------------
#
# This file will setup the server with Nginx, PHP, and Mysql.
#
#/

. /etc/.sail/includes/colors
. /etc/.sail/includes/format

PHP="8.0"

setsail

bar
cyan "| Installing Nginx ";
bar

sudo apt-get update
sudo apt-get -y install nginx
sudo ufw allow 'Nginx HTTP'
sudo ufw allow 'Nginx HTTPS'
sudo systemctl restart nginx

bar
cyan "| Installing MySQL ";
bar

MYSQLPASS=$(openssl rand -base64 32)

sudo apt-get update
if [ ! -d /etc/.sail/tmp ]; then
  mkdir /etc/.sail/tmp
fi


echo '[client]' > /home/sail/.my.cnf
echo 'user=root' >> /home/sail/.my.cnf
echo 'password='${MYSQLPASS} >> /home/sail/.my.cnf

chmod 600 /home/sail/.my.cnf


echo "mysql-server mysql-server/root_password password $MYSQLPASS" | sudo debconf-set-selections
echo "mysql-server mysql-server/root_password_again password $MYSQLPASS" | sudo debconf-set-selections
echo "mysql-server-5.7 mysql-server/root_password password $MYSQLPASS" | sudo debconf-set-selections
echo "mysql-server-5.7 mysql-server/root_password_again password $MYSQLPASS" | sudo debconf-set-selections

sudo apt-get install -y mysql-server

# Get current client IP address
CLIENT_IP=$(echo $SSH_CLIENT | awk '{ print $1}')

# Enable 3306 ports in order to connect to database via Sequel Pro
sudo ufw allow from ${CLIENT_IP}/32 to any port 3306



bar
cyan "| Installing PHP $PHP and all necessary files";
bar

sudo apt-get update
sudo apt-get install -y language-pack-en-base
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
sudo apt-get install -y software-properties-common curl
sudo add-apt-repository -y ppa:ondrej/php
sudo apt-get -y update
sudo apt-get -y upgrade

# Install Some Basic Packages
apt-get install -y build-essential dos2unix gcc git git-lfs libmcrypt4 libpcre3-dev libpng-dev chrony unzip make \
python3-pip re2c supervisor unattended-upgrades whois vim libnotify-bin pv cifs-utils mcrypt bash-completion zsh \
graphviz avahi-daemon tshark imagemagick

# Install Generic PHP packages
apt-get install -y --allow-change-held-packages \
php-imagick php-memcached php-redis php-xdebug php-dev php-swoole

# PHP 8.0
apt-get install -y --allow-change-held-packages \
php8.0 php8.0-bcmath php8.0-bz2 php8.0-cgi php8.0-cli php8.0-common php8.0-curl php8.0-dba php8.0-dev \
php8.0-enchant php8.0-fpm php8.0-gd php8.0-gmp php8.0-imap php8.0-interbase php8.0-intl php8.0-ldap \
php8.0-mbstring php8.0-mysql php8.0-odbc php8.0-opcache php8.0-pgsql php8.0-phpdbg php8.0-pspell php8.0-readline \
php8.0-snmp php8.0-soap php8.0-sqlite3 php8.0-sybase php8.0-tidy php8.0-xdebug php8.0-xml php8.0-xsl php8.0-zip \
php8.0-memcached

# PHP 7.4
apt-get install -y --allow-change-held-packages \
php7.4 php7.4-bcmath php7.4-bz2 php7.4-cgi php7.4-cli php7.4-common php7.4-curl php7.4-dba php7.4-dev \
php7.4-enchant php7.4-fpm php7.4-gd php7.4-gmp php7.4-imap php7.4-interbase php7.4-intl php7.4-json php7.4-ldap \
php7.4-mbstring php7.4-mysql php7.4-odbc php7.4-opcache php7.4-pgsql php7.4-phpdbg php7.4-pspell php7.4-readline \
php7.4-snmp php7.4-soap php7.4-sqlite3 php7.4-sybase php7.4-tidy php7.4-xdebug php7.4-xml php7.4-xmlrpc php7.4-xsl \
php7.4-zip php7.4-memcached

update-alternatives --set php /usr/bin/php8.0
update-alternatives --set php-config /usr/bin/php-config8.0
update-alternatives --set phpize /usr/bin/phpize8.0

# sudo rm /usr/bin/php
# sudo ln -s /usr/bin/php$PHP /usr/bin/php

bar
cyan "| Updating Permissions "
bar

sudo chown -R sail:sail /var/www

CHECK_SWAP=$(swapon -s | wc -l)
if [ $CHECK_SWAP -lt 1 ] ; then
    bar
    cyan "| Adding swap file "
    bar

    # Create a swap file
    sudo fallocate -l 1G /swapfile
    sudo chmod 600 /swapfile
    sudo mkswap /swapfile
    sudo swapon /swapfile

    # Making the swap file permanent
    sudo cp /etc/fstab /etc/fstab.bak
    echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
fi


bar
cyan "| Installing Composer ";
bar

curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer

bar
cyan "| Installing npm"
bar

curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
sudo apt-get install -y nodejs

bar
cyan "| Adding the Laravel Installer "
bar

sudo chown -R $USER:$USER ~/.composer/
composer global require "laravel/installer"

bar
cyan "| Installing certbot ";
bar

VER=$(lsb_release -sr)
VER=${VER%.*}

if [ $VER -ge 20 ] ; then
	sudo apt -y install python3-certbot-nginx
else
	sudo add-apt-repository ppa:certbot/certbot
	sudo apt-get update
	sudo apt-get -y install python-certbot-nginx
fi

setsail

bar
cyan "| Happy Sailing! "
bar
